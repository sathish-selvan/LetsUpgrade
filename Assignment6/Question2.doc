# Question 2
# Implement push, pop and find the minimum element in a stack in O(1) time complexity.

#Answer:::

global l1,top,size,l2
l1= list()
l2 = list()
top = -1
size = 5

def push(x):
    global top, l1, size,l2
    if top == size-1:
        print("stack Overflow")
    elif top ==-1:
        top += 1
        l1.append(x)
        l2.append(x)
    
    else:
        top += 1
        l1.append(x)
        if x < l2[-1]:
            a = x
            l2.append(a)
        else:
            a = l2[-1]
            l2.append(a)

def pop():
    global top, l1,l2
    if top == -1:
        print("No Elements to pop")
    else:
        top -= 1
        l1.pop()
        l2.pop()

def mini():
    global top, l1,l2
    if top == -1:
        print("stack underflow")
        return
    else:
        print(l2[-1])


def show():
    global top,l1
    if top == -1:
        print("stack underflow")
    else:
        for i in range(len(l1)-1,-1,-1):
            print(l1[i])

push(10)
push(20)
push(30)
mini()
pop()
mini()






